name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Print Foundry versions
        run: |
          forge --version
          anvil --version

      - name: Solidity - Format, Build, Test (with gas report)
        run: |
          forge fmt --check
          forge build
          forge test -vvv --gas-report

      - name: Upload gas report artifact (if present)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gas-report
          path: gas_report.txt
          if-no-files-found: ignore

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: SDK - Install dependencies
        working-directory: sdk
        run: npm ci

      - name: SDK - Build
        working-directory: sdk
        run: npm run build

      - name: SDK - Test
        working-directory: sdk
        run: npm test

      - name: Offchain Service - Install dependencies
        working-directory: offchain-service
        run: npm ci

  slither:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Slither
        run: |
          python -m pip install --upgrade pip
          pip install slither-analyzer

      - name: Run Slither on contracts (text + JSON)
        run: |
          slither src/ --print human-summary --filter-paths test/ > slither-report.txt || true
          # also emit JSON report for machine parsing
          slither src/ --json slither-report.json --filter-paths test/ || true

      - name: Parse Slither JSON
        if: always()
        run: |
          python3 scripts/ci/parse_slither.py slither-report.json parsed-slither.json

      - name: Upload parsed Slither report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: slither-parsed
          path: parsed-slither.json
          if-no-files-found: warn

      - name: Upload Slither reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: slither-report
          path: |
            slither-report.txt
            slither-report.json
          if-no-files-found: warn
